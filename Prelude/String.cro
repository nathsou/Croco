Chars (String str) = str
CharCode (String [c]) = c

ToUpper = Map (\c -> if c >= 97 && c <= 122 then c - 32 else c)
ToLower = Map (\c -> if c >= 65 && c <= 90 then c + 32 else c)

Join lst = Fold (++) "" (Rev lst)

JoinWith (String del) lst = String (JoinWith' del (Rev lst) [])
JoinWith' del [] acc = acc
JoinWith' del [String h] acc = h ++ acc
JoinWith' del (String h):tl acc = JoinWith' del tl (del ++ h ++ acc)

DigitOfChar (String [c]) = DigitOfChar c
DigitOfChar c = if c >= 48 && c <= 57 then Some (c - 48) else None

CharOfDigit 0 = "0"
CharOfDigit 1 = "1"
CharOfDigit 2 = "2"
CharOfDigit 3 = "3"
CharOfDigit 4 = "4"
CharOfDigit 5 = "5"
CharOfDigit 6 = "6"
CharOfDigit 7 = "7"
CharOfDigit 8 = "8"
CharOfDigit 9 = "9"

IsDigit (String [c]) = IsDigit c
IsDigit (String c:cs) = False
IsDigit "" = False
IsDigit c = c >= CharCode "0" && c <= CharCode "9"

StringOfInt n = Join (Map CharOfDigit (Digits n))

IntOfString (String ds) = MapOption FromDigits (MapOption DigitOfChar ds)

TrimLeft = DropWhile (== CharCode " ")

-- total order on strings
(String as) < (String bs) = StringLess as bs
StringLess [] [] = False
StringLess _ [] = False
StringLess [] _ = True
StringLess a:as b:bs = if a == b then as `StringLess` bs else a < b

(String as) > (String bs) = StringGtr as bs
StringGtr [] [] = False
StringGtr _ [] = True
StringGtr [] _ = False
StringGtr a:as b:bs = if a == b then as `StringGtr` bs else a > b

(String as) >= (String bs) = Not (as `StringLess` bs)
(String as) <= (String bs) = Not (as `StringGtr` bs)